#pragma once

#include <unordered_map>
#include <string>
#include <stdint.h>
#include "../database/dab_database_types.h"

// Referring to database/dab_database_types.h
// Extended Country Code (ECC) = 8bits
// Country ID (CID) = 4bits
// Full ID = (ECC << 4) | CID
#define CODE(ECC,CID) (((ECC & 0xFF) << 4) | (CID & 0xF))

// DOC: ETSI TS 101 756
static const auto DAB_COUNTRY_TABLE = std::unordered_map<uint16_t, const std::string>{
    // Table 3: ITU Region 1 (European broadcasting area) 
    { CODE(0xE0,0x1), "Germany" }, 
    { CODE(0xE0,0x2), "Algeria" }, 
    { CODE(0xE0,0x3), "Andorra" }, 
    { CODE(0xE0,0x4), "Israel" }, 
    { CODE(0xE0,0x5), "Italy" },
    { CODE(0xE0,0x6), "Belgium" }, 
    { CODE(0xE0,0x7), "Russian Federation" }, 
    { CODE(0xE0,0x8), "Palestine" }, 
    { CODE(0xE0,0x9), "Albania" }, 
    { CODE(0xE0,0xA), "Austria" }, 
    { CODE(0xE0,0xB), "Hungary" }, 
    { CODE(0xE0,0xC), "Malta" }, 
    { CODE(0xE0,0xD), "Germany" }, 
    { CODE(0xE0,0xF), "Egypt" }, 
    { CODE(0xE1,0x1), "Greece" }, 
    { CODE(0xE1,0x2), "Cyprus" }, 
    { CODE(0xE1,0x3), "San Marino" }, 
    { CODE(0xE1,0x4), "Switzerland" }, 
    { CODE(0xE1,0x5), "Jordan" }, 
    { CODE(0xE1,0x6), "Finland" }, 
    { CODE(0xE1,0x7), "Luxembourg" }, 
    { CODE(0xE1,0x8), "Bulgaria" },  
    { CODE(0xE1,0x9), "Denmark" }, 
    // { CODE(0xE1,0x9), "Faroe" }, 
    { CODE(0xE1,0xA), "Gibraltar" },  
    { CODE(0xE1,0xB), "Iraq" }, 
    { CODE(0xE1,0xC), "United Kingdom" }, 
    { CODE(0xE1,0xD), "Libya" }, 
    { CODE(0xE1,0xE), "Romania" }, 
    { CODE(0xE1,0xF), "France" }, 
    { CODE(0xE2,0x1), "Morocco" }, 
    { CODE(0xE2,0x2), "Czech Republic" }, 
    { CODE(0xE2,0x3), "Poland" }, 
    { CODE(0xE2,0x4), "Vatican" }, 
    { CODE(0xE2,0x5), "Slovakia" }, 
    { CODE(0xE2,0x6), "Syria" }, 
    { CODE(0xE2,0x7), "Tunisia" }, 
    { CODE(0xE2,0x9), "Liechtenstein" }, 
    { CODE(0xE2,0xA), "Iceland" }, 
    { CODE(0xE2,0xB), "Monaco" }, 
    { CODE(0xE2,0xC), "Lithuania" }, 
    { CODE(0xE2,0xD), "Serbia" }, 
    // { CODE(0xE2,0xE), "Canary Islands" }, 
    { CODE(0xE2,0xE), "Spain" }, 
    { CODE(0xE2,0xF), "Norway" }, 
    { CODE(0xE3,0x1), "Montenegro" }, 
    { CODE(0xE3,0x2), "Ireland" }, 
    { CODE(0xE3,0x3), "Turkey" }, 
    { CODE(0xE3,0x5), "Tajikistan" }, 
    { CODE(0xE3,0x8), "Netherlands" }, 
    { CODE(0xE3,0x9), "Latvia" }, 
    { CODE(0xE3,0xA), "Lebanon" }, 
    { CODE(0xE3,0xB), "Azerbaijan" },  
    { CODE(0xE3,0xC), "Croatia" }, 
    { CODE(0xE3,0xD), "Kazakhstan" }, 
    { CODE(0xE3,0xE), "Sweden" }, 
    { CODE(0xE3,0xF), "Belarus" }, 
    { CODE(0xE4,0x1), "Moldova" }, 
    { CODE(0xE4,0x2), "Estonia" },  
    { CODE(0xE4,0x3), "Macedonia" }, 
    { CODE(0xE4,0x6), "Ukraine" }, 
    { CODE(0xE4,0x7), "Kosovo" }, 
    // { CODE(0xE4,0x8), "Azores" }, 
    // { CODE(0xE4,0x8), "Madeira" }, 
    { CODE(0xE4,0x8), "Portugal" }, 
    { CODE(0xE4,0x9), "Slovenia" }, 
    { CODE(0xE4,0xA), "Armenia" }, 
    { CODE(0xE4,0xB), "Uzbekistan" }, 
    { CODE(0xE4,0xC), "Georgia" }, 
    { CODE(0xE4,0xE), "Turkmenistan" }, 
    { CODE(0xE4,0xF), "Bosnia Herzegovina" }, 
    { CODE(0xE5,0x3), "Kyrgyzstan" }, 

    // Table 4: ITU Region 1 (African broadcasting area)
    { CODE(0xD0,0x1) , "Cameroon" }, 
    { CODE(0xD0,0x2) , "Central African Republic" }, 
    { CODE(0xD0,0x3) , "Djibouti" }, 
    { CODE(0xD0,0x4) , "Madagascar" },
    { CODE(0xD0,0x5) , "Mali" },
    { CODE(0xD0,0x6) , "Angola" }, 
    { CODE(0xD0,0x7) , "Equatorial Guinea" }, 
    { CODE(0xD0,0x8) , "Gabon" }, 
    { CODE(0xD0,0x9) , "Republic of Guinea" }, 
    { CODE(0xD0,0xA) , "South Africa" },
    { CODE(0xD0,0xB) , "Burkina Faso" }, 
    { CODE(0xD0,0xC) , "Congo" }, 
    { CODE(0xD0,0xD) , "Togo" },
    { CODE(0xD0,0xE) , "Benin" }, 
    { CODE(0xD0,0xF) , "Malawi" },
    { CODE(0xD1,0x1) , "Namibia" },
    { CODE(0xD1,0x2) , "Liberia" }, 
    { CODE(0xD1,0x3) , "Ghana" }, 
    { CODE(0xD1,0x4) , "Mauritania" },
    { CODE(0xD1,0x5) , "Sao Tome and Principe" },
    { CODE(0xD1,0x6) , "Cape Verde" }, 
    { CODE(0xD1,0x7) , "Senegal" },
    { CODE(0xD1,0x8) , "Gambia" }, 
    { CODE(0xD1,0x9) , "Burundi" }, 
    { CODE(0xD1,0xA) , "Ascension Island" }, 
    { CODE(0xD1,0xB) , "Botswana" }, 
    { CODE(0xD1,0xC) , "Comoros" }, 
    { CODE(0xD1,0xD) , "Tanzania" },
    { CODE(0xD1,0xE) , "Ethiopia" }, 
    { CODE(0xD1,0xF) , "Nigeria" },
    { CODE(0xD2,0x1) , "Sierra Leone" },
    { CODE(0xD2,0x2) , "Zimbabwe" },
    { CODE(0xD2,0x3) , "Mozambique" },
    { CODE(0xD2,0x4) , "Uganda" },
    { CODE(0xD2,0x5) , "Swaziland" },
    { CODE(0xD2,0x6) , "Kenya" }, 
    { CODE(0xD2,0x7) , "Somalia" },
    { CODE(0xD2,0x8) , "Niger" },
    { CODE(0xD2,0x9) , "Chad" }, 
    { CODE(0xD2,0xA) , "Guinea-Bissau" }, 
    { CODE(0xD2,0xB) , "Zaire" },
    { CODE(0xD2,0xC) , "Cote d'Ivoire" }, 
    { CODE(0xD2,0xD) , "Zanzibar" },
    { CODE(0xD2,0xE) , "Zambia" },
    { CODE(0xD3,0x3) , "Western Sahara" },
    { CODE(0xD3,0x5) , "Rwanda" },
    { CODE(0xD3,0x6) , "Lesotho" }, 
    { CODE(0xD3,0x8) , "Seychelles" },
    { CODE(0xD3,0xA) , "Mauritius" },
    { CODE(0xD3,0xC) , "Sudan" },
    // { CODE(0xE0,0x2) , "Algeria" }, 
    // { CODE(0xE0,0xF) , "Egypt" }, 
    // { CODE(0xE1,0xD) , "Libya" }, 
    // { CODE(0xE2,0x1) , "Morocco" },
    // { CODE(0xE2,0x7) , "Tunisia" },
    // { CODE(0xE2,0xE) , "Canary Islands" }, 

    // Table 6: ITU Region 2 (North and South Americas) 
    #define COUNTRY_A0 "United States of America"
    // #define COUNTRY_A0 "Puerto Rico"
    // #define COUNTRY_A0 "Virgin islands (USA)"
    { CODE(0xA0,0x1), COUNTRY_A0},
    { CODE(0xA0,0x2), COUNTRY_A0},
    { CODE(0xA0,0x3), COUNTRY_A0},
    { CODE(0xA0,0x4), COUNTRY_A0},
    { CODE(0xA0,0x5), COUNTRY_A0},
    { CODE(0xA0,0x6), COUNTRY_A0},
    { CODE(0xA0,0x7), COUNTRY_A0},
    { CODE(0xA0,0x8), COUNTRY_A0},
    { CODE(0xA0,0x9), COUNTRY_A0},
    { CODE(0xA0,0xA), COUNTRY_A0},
    { CODE(0xA0,0xB), COUNTRY_A0},
    { CODE(0xA0,0xD), COUNTRY_A0},
    { CODE(0xA0,0xE), COUNTRY_A0},
    #undef COUNTRY_A0
    { CODE(0xA1,0xB), "Canada" },
    { CODE(0xA1,0xC), "Canada" },
    { CODE(0xA1,0xD), "Canada" },
    { CODE(0xA1,0xE), "Canada" }, 
    { CODE(0xA1,0xF), "Greenland" }, 
    { CODE(0xA2,0x1), "Anguilla" }, 
    { CODE(0xA2,0x2), "Antigua and Barbuda" }, 
    { CODE(0xA2,0x3), "Ecuador" }, 
    { CODE(0xA2,0x4), "Falkland Islands" }, 
    { CODE(0xA2,0x5), "Barbados" }, 
    { CODE(0xA2,0x6), "Belize" }, 
    { CODE(0xA2,0x7), "Cayman Islands" }, 
    { CODE(0xA2,0x8), "Costa Rica" }, 
    { CODE(0xA2,0x9), "Cuba" }, 
    { CODE(0xA2,0xA), "Argentina" }, 
    { CODE(0xA2,0xB), "Brazil" }, 
    { CODE(0xA2,0xC), "Bermuda" }, 
    { CODE(0xA2,0xD), "Netherlands Antilles" },
    { CODE(0xA2,0xE), "Guadeloupe" }, 
    { CODE(0xA2,0xF), "Bahamas" }, 
    { CODE(0xA3,0x1), "Bolivia" }, 
    { CODE(0xA3,0x2), "Colombia" }, 
    { CODE(0xA3,0x3), "Jamaica" },
    { CODE(0xA3,0x4), "Martinique" },
    { CODE(0xA3,0x6), "Paraguay" },
    { CODE(0xA3,0x7), "Nicaragua" },
    { CODE(0xA3,0x9), "Panama" },
    { CODE(0xA3,0xA), "Dominica" }, 
    { CODE(0xA3,0xB), "Dominican Republic" }, 
    { CODE(0xA3,0xC), "Chile" }, 
    { CODE(0xA3,0xD), "Grenada" }, 
    { CODE(0xA3,0xE), "Turks and Caicos islands" },
    { CODE(0xA3,0xF), "Guyana" },
    { CODE(0xA4,0x1), "Guatemala" }, 
    { CODE(0xA4,0x2), "Honduras" },
    { CODE(0xA4,0x3), "Aruba" }, 
    { CODE(0xA4,0x5), "Montserrat" },
    { CODE(0xA4,0x6), "Trinidad and Tobago" },
    { CODE(0xA4,0x7), "Peru" },
    { CODE(0xA4,0x8), "Surinam" },
    { CODE(0xA4,0x9), "Uruguay" },
    { CODE(0xA4,0xA), "St. Kitts" },
    { CODE(0xA4,0xB), "St. Lucia" },
    { CODE(0xA4,0xC), "El Salvador" }, 
    { CODE(0xA4,0xD), "Haiti" },
    { CODE(0xA4,0xE), "Venezuela" },
    { CODE(0xA5,0xB), "Mexico" },
    { CODE(0xA5,0xC), "St. Vincent" },
    { CODE(0xA5,0xD), "Mexico" },
    { CODE(0xA5,0xE), "Mexico" },
    { CODE(0xA5,0xF), "Mexico" },
    { CODE(0xA5,0xF), "Virgin islands (British)" },
    { CODE(0xA6,0x3), "Brazil" },
    { CODE(0xA6,0xC), "Brazil" },
    { CODE(0xA6,0xD), "Brazil" },
    { CODE(0xA6,0xF), "St. Pierre and Miquelon" },

    // Table 7: ITU Region 3 (Asia and Pacific) 
    { CODE(0xE1,0xB), "Laos" },
    { CODE(0xF0,0x1), "Australia (City Commerical/Community)" },
    { CODE(0xF0,0x2), "Australia (Regional NSW/ACT)" },
    { CODE(0xF0,0x3), "Australia (City National)" },
    { CODE(0xF0,0x4), "Australia (Regional QLD)" },
    { CODE(0xF0,0x5), "Australia (Regional SA/NT)" },
    { CODE(0xF0,0x6), "Australia (Regional WA)" },
    { CODE(0xF0,0x7), "Australia (Regional VIC/TAS)" },
    { CODE(0xF0,0x8), "Australia (Regional Future)" },
    { CODE(0xF0,0x9), "Vanuatu" },
    { CODE(0xF0,0xA), "Yemen" },
    { CODE(0xF0,0xB), "Sri Lanka" },
    { CODE(0xF0,0xC), "Brunei Darussalam" },
    { CODE(0xF0,0xD), "Japan" },
    { CODE(0xF0,0xE), "Fiji" },
    { CODE(0xF0,0xF), "Iran" },
    { CODE(0xF1,0x1), "Korea (South)" },
    { CODE(0xF1,0x2), "Cambodia" },
    { CODE(0xF1,0x3), "Hong Kong" },
    { CODE(0xF1,0x4), "Solomon Islands" },
    { CODE(0xF1,0x5), "Bahrain" },
    { CODE(0xF1,0x6), "Western Samoa" },
    { CODE(0xF1,0x7), "Taiwan" },
    { CODE(0xF1,0x8), "Malaysia" },
    { CODE(0xF1,0x9), "Singapore" },
    { CODE(0xF1,0xA), "Pakistan" },
    { CODE(0xF1,0xB), "China" },
    { CODE(0xF1,0xC), "Myanmar (Burma)" },
    { CODE(0xF1,0xD), "Nauru" },
    { CODE(0xF1,0xE), "Kiribati" },
    { CODE(0xF1,0xF), "Bangladesh" },
    { CODE(0xF2,0x1), "Vietnam" },
    { CODE(0xF2,0x2), "Philippines" },
    { CODE(0xF2,0x3), "Bhutan" },
    { CODE(0xF2,0x4), "Oman" },
    { CODE(0xF2,0x5), "Nepal" },
    { CODE(0xF2,0x6), "United Arab Emirates" },
    { CODE(0xF2,0x7), "Kuwait" },
    { CODE(0xF2,0x8), "Qatar" },
    { CODE(0xF2,0x9), "Korea (North)" },
    { CODE(0xF2,0xA), "New Zealand" },
    { CODE(0xF2,0xB), "Tonga" },
    { CODE(0xF2,0xC), "Micronesia" },
    { CODE(0xF2,0xD), "Macau" },
    { CODE(0xF2,0xE), "India" },
    { CODE(0xF2,0xF), "Saudi Arabia" },
    { CODE(0xF3,0x1), "Iraq" },
    { CODE(0xF3,0x2), "Mongolia" },
    { CODE(0xF3,0x3), "Maldives" },
    { CODE(0xF3,0x9), "Papua New Guinea" },
    { CODE(0xF3,0xB), "Afghanistan" },
    { CODE(0xF3,0xE), "Indonesia" },
    { CODE(0xF3,0xF), "Thailand" },
};

#undef CODE

static const std::string& GetCountryName(extended_country_id_t ecc, country_id_t country_id) {
    static const auto DEFAULT_RETURN = std::string("Undefined");
    const uint16_t key = ((ecc & 0xFF) << 4) | (country_id & 0xF);
    auto res = DAB_COUNTRY_TABLE.find(key);
    if (res == DAB_COUNTRY_TABLE.end()) {
        return DEFAULT_RETURN;
    }
    return res->second;
}