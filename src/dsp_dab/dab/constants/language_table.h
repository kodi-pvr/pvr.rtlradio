#pragma once

#include <string>
#include <unordered_map>
#include "../database/dab_database_types.h"

// Referring to database/dab_database_types.h
// language_id_t: 8bits

// DOC: ETSI TS 101 756
const auto DAB_LANGUAGE_TABLE = std::unordered_map<language_id_t, const std::string>{
    // Table 9: European Latin-based languages 
    { 0x00, "Unknown" },
    { 0x01, "Albanian" },
    { 0x02, "Breton" },
    { 0x03, "Catalan" },
    { 0x04, "Croatian" },
    { 0x05, "Welsh" },
    { 0x06, "Czech" },
    { 0x07, "Danish" },
    { 0x08, "German" },
    { 0x09, "English" },
    { 0x0A, "Spanish" },
    { 0x0B, "Esperanto" },
    { 0x0C, "Estonian" },
    { 0x0D, "Basque" },
    { 0x0E, "Faroese" },
    { 0x0F, "French" },
    { 0x10, "Frisian" },
    { 0x11, "Irish" },
    { 0x12, "Gaelic" },
    { 0x13, "Galician" },
    { 0x14, "Icelandic" },
    { 0x15, "Italian" },
    { 0x16, "Sami" },
    { 0x17, "Latin" },
    { 0x18, "Latvian" },
    { 0x19, "Luxembourgian" },
    { 0x1A, "Lithuanian" },
    { 0x1B, "Hungarian" },
    { 0x1C, "Maltese" },
    { 0x1D, "Dutch" },
    { 0x1E, "Norwegian" },
    { 0x1F, "Occitan" },
    { 0x20, "Polish" },
    { 0x21, "Portuguese" },
    { 0x22, "Romanian" },
    { 0x23, "Romansh" },
    { 0x24, "Serbian" },
    { 0x25, "Slovak" },
    { 0x26, "Slovene" },
    { 0x27, "Finnish" },
    { 0x28, "Swedish" },
    { 0x29, "Turkish" },
    { 0x2A, "Flemish" },
    { 0x2B, "Walloon" },
    { 0x2C, "RFU" },
    { 0x2D, "RFU" },
    { 0x2E, "RFU" },
    { 0x2F, "RFU" },
    { 0x30, "Reserved national" },
    { 0x31, "Reserved national" },
    { 0x32, "Reserved national" },
    { 0x33, "Reserved national" },
    { 0x34, "Reserved national" },
    { 0x35, "Reserved national" },
    { 0x36, "Reserved national" },
    { 0x37, "Reserved national" },
    { 0x38, "Reserved national" },
    { 0x39, "Reserved national" },
    { 0x3A, "Reserved national" },
    { 0x3B, "Reserved national" },
    { 0x3C, "Reserved national" },
    { 0x3D, "Reserved national" },
    { 0x3E, "Reserved national" },
    { 0x3F, "Reserved national" },

    // Table 10: Other languages 
    { 0x40, "Background sound/clean feed" }, 
    { 0x41, "rfu" }, 
    { 0x42, "rfu" }, 
    { 0x43, "rfu" }, 
    { 0x44, "rfu" }, 
    { 0x45, "Zulu" }, 
    { 0x46, "Vietnamese" }, 
    { 0x47, "Uzbek" }, 
    { 0x48, "Urdu" }, 
    { 0x49, "Ukranian" }, 
    { 0x4A, "Thai" }, 
    { 0x4B, "Telugu" }, 
    { 0x4C, "Tatar" }, 
    { 0x4D, "Tamil" }, 
    { 0x4E, "Tadzhik" }, 
    { 0x4F, "Swahili" }, 
    { 0x50, "Sranan Tongo" }, 
    { 0x51, "Somali" }, 
    { 0x52, "Sinhalese" }, 
    { 0x53, "Shona" }, 
    { 0x54, "Serbo-Croat" }, 
    { 0x55, "Rusyn" }, 
    { 0x56, "Russian" }, 
    { 0x57, "Quechua" }, 
    { 0x58, "Pushtu" }, 
    { 0x59, "Punjabi" }, 
    { 0x5A, "Persian" }, 
    { 0x5B, "Papiamento" }, 
    { 0x5C, "Oriya" }, 
    { 0x5D, "Nepali" }, 
    { 0x5E, "Ndebele" }, 
    { 0x5F, "Marathi" }, 
    { 0x60, "Moldavian" },  
    { 0x61, "Malaysian" },  
    { 0x62, "Malagasay" },  
    { 0x63, "Macedonian" },  
    { 0x64, "Laotian" },  
    { 0x65, "Korean" },  
    { 0x66, "Khmer" },  
    { 0x67, "Kazakh" },  
    { 0x68, "Kannada" },  
    { 0x69, "Japanese" },  
    { 0x6A, "Indonesian" },  
    { 0x6B, "Hindi" },  
    { 0x6C, "Hebrew" },  
    { 0x6D, "Hausa" },  
    { 0x6E, "Gurani" },  
    { 0x6F, "Gujurati" },  
    { 0x70, "Greek" },  
    { 0x71, "Georgian" },  
    { 0x72, "Fulani" },  
    { 0x73, "Dari" },  
    { 0x74, "Chuvash" },  
    { 0x75, "Chinese" },  
    { 0x76, "Burmese" },  
    { 0x77, "Bulgarian" },  
    { 0x78, "Bengali" },  
    { 0x79, "Belorussian" },  
    { 0x7A, "Bambora" },  
    { 0x7B, "Azerbaijani" },  
    { 0x7C, "Assamese" },  
    { 0x7D, "Armenian" },  
    { 0x7E, "Arabic" },  
    { 0x7F, "Amharic" },  
};

static const std::string& GetLanguageName(language_id_t language) {
    static const auto DEFAULT_RETURN = std::string("Undefined");
    auto res = DAB_LANGUAGE_TABLE.find(language);
    if (res == DAB_LANGUAGE_TABLE.end()) {
        return DEFAULT_RETURN;
    }
    return res->second;
}